<Project>
    <PropertyGroup>
        <Company>Alex RÃ¸nne Petersen</Company>
        <Copyright>ISC License (No Attribution)</Copyright>
        <Description>A terminal-centric replacement for System.Console.</Description>
        <Product>System.Terminal</Product>
    </PropertyGroup>

    <PropertyGroup>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <ContinuousIntegrationBuild Condition="'$(CI)' == 'true'">true</ContinuousIntegrationBuild>
        <DebugType>portable</DebugType>
        <Deterministic>true</Deterministic>
        <EmbedAllSources>true</EmbedAllSources>
        <LangVersion>preview</LangVersion>
        <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>
        <Nullable>enable</Nullable>
        <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    </PropertyGroup>

    <PropertyGroup>
        <Authors>$(Company)</Authors>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <IncludeSource>true</IncludeSource>
        <IsPackable>false</IsPackable>
        <IsPublishable>false</IsPublishable>
        <PackageDescription>
System.Terminal is a terminal-centric replacement for System.Console.

With the Windows console host now supporting VT100 sequences, it makes little
sense for console interaction to still be centered around the old Windows
console host and the many limitations it had. System.Terminal provides an API
centered around a full-featured VT100 terminal and works on all platforms that
.NET Core supports.
        </PackageDescription>
        <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>
</Project>
